/* In UI.module.scss */

$gameOverHeight: 40rem;
$gameOverWidth: 100vw;

.hud {
  width: 100vw;
  height: 100vh;
  position: absolute;
  z-index: theme.$z-ind-game-ui;
  /* UPDATED: This allows clicks to pass through the main container... */
  pointer-events: none;
}

.touchArea {
  width: 100%;
  height: 100%;
  pointer-events: none; /* This should also be none */
}

/* ...but we re-enable them for the specific UI elements that need to be clicked. */
.upperRight,
.upgradeButtonsContainer,
.gameOver {
  pointer-events: auto;
}

.gameOver {
  width: $gameOverWidth;
  height: $gameOverHeight;
  position: absolute;
  top: calc((100vh - $gameOverHeight) / 2);
  left: calc((100vw - $gameOverWidth) / 2);
  z-index: 200;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 1rem;
  text-align: center;
  word-spacing: -0.2rem;
  text-shadow: 0 0 0.5rem black;
  animation: slideUp 2s cubic-bezier(0.25, 1, 0.5, 1);

  span.gameOverText {
    color: theme.$light-clr-1;
    margin-bottom: 0.3rem;
    margin-top: -1rem;
    font-size: 6rem;
  }
  span.scoreText {
    color: theme.$acc-clr-3;
    margin-bottom: 0.5rem;
    font-size: 6rem;
    @include theme.breathing;
  }
  span.subtitleText {
    color: theme.$light-clr-1;
    font-size: 2.8rem;
  }
  span.titleText {
    color: theme.$light-clr-1;
    font-size: 3.8rem;
  }
  div.gameBox {
    display: flex;
    gap: 3rem;
    border: 1px dashed whitesmoke;
    padding: 10px 20px;
    margin-bottom: 2rem;
    border-radius: 20px;
    span div {
      color: theme.$acc-clr-3;
      @include theme.breathing;
    }
  }
  div.gameBox2 {
    display: flex;
    flex-direction: column;
    gap: 3rem;
    border: 1px dashed whitesmoke;
    padding: 10px 20px;
    margin-bottom: 2rem;
    border-radius: 20px;
    span div {
      color: theme.$acc-clr-3;
      @include theme.breathing;
    }
  }
    button.playagain {
    width: auto;         /* allow button to size to content */
    white-space: nowrap; /* keep "Play Again" on one line */
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 0.6rem 1.2rem; /* optional: nicer sizing */
  }
}

.upperLeft,
.upperRight,
.upperCenter {
  width: auto;
  position: absolute;
  padding: 1.2rem;
  z-index: 1;
}

.upperLeft {
  left: 0;
  top: 0;
  display: flex;
  flex-direction: column;
  align-items: start;
  color: theme.$acc-clr-1;

  span.uiVariable {
    margin-bottom: 0.5rem;
    margin-bottom: 0.5rem;
    font-size: 4rem;
  }
  span.uiLabel {
    margin-bottom: -0.5rem;
    font-size: 2rem;
  }
}

.upperRight {
  right: 0;
  top: 0;
  display: flex;
  flex-direction: row;
}

.upperCenter {
  $width: 60vmin;
  left: calc((100vw - $width) / 2);
  top: calc(50vh - 45vmin);
  width: $width;
  height: 5vmin;
  padding: 0;

  div.cooldownBar {
    background-color: theme.$acc-clr-1;
    width: 100%;
    height: 100%;
    border-radius: 3vmin;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;

    div.cooldownBarBG {
      background-color: theme.$cell-clr-1;
      border-radius: 2vmin;
      width: 95%;
      height: 50%;
      overflow: hidden;

      div.cooldownBarFill {
        background-color: theme.$acc-clr-3;
        height: 100%;
        transition: width 0.5s;
      }
    }
  }
}


.upgradeButtonsContainer {
  position: absolute;
  /* Left edge aligned with the grid’s left edge */
  left: calc(50vw - theme.$grid-scale / 2);
  /* Just below the grid’s bottom edge (tweak +2vmin as needed) */
  top: calc(58vh + theme.$grid-scale / 2 + 2vmin);

  width: theme.$grid-scale;
  display: flex;
  justify-content: center;
  gap: 1rem;
  z-index: 100;
}

.upgradeButton {
  /* Cell-like styling */
  background-color: theme.$cell-clr-1;
  background-image: linear-gradient(45deg, rgba(255,255,255,0.12) 25%, transparent 25%, transparent 50%, rgba(255,255,255,0.12) 50%, rgba(255,255,255,0.12) 75%, transparent 75%, transparent);
  background-size: 4vmin 4vmin;
  color: theme.$dark-clr-1;
  border: 0.35vmin solid rgba(0, 0, 0, 0.25);
  border-radius: 1.2vmin;
  padding: 0.8vmin 1.6vmin;
  font-size: 2.2vmin;
  line-height: 1;
  text-shadow: 0 0.3vmin 0.6vmin rgba(0, 0, 0, 0.35);
  box-shadow:
    inset 0 0.6vmin 0.9vmin rgba(0, 0, 0, 0.25),
    0 0.6vmin 1.2vmin rgba(0, 0, 0, 0.35);
  cursor: pointer;
  transition: transform 120ms ease, filter 120ms ease;

  &:hover:not([disabled]) {
    transform: translateY(-0.3vmin);
    filter: brightness(1.05);
  }

  &:active:not([disabled]) {
    transform: translateY(0.1vmin) scale(0.99);
    filter: brightness(0.98);
  }

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    filter: grayscale(0.3);
  }
}

.puff {
  animation: puff 0.2s;
}

.barFull {
  @include theme.barFull;
}

@keyframes puff {
  0%,
  100% {
    transform: scale(1);
  }
  15% {
    transform: scale(1.3);
  }
}

@keyframes slideUp {
  0%,
  40% {
    top: -$gameOverHeight;
  }
  100% {
    top: calc((100vh - $gameOverHeight) / 2);
  }
}